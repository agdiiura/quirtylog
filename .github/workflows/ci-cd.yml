# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: quirtylog-build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  # Gives the action the necessary permissions for publishing new
  # comments in pull requests.
  pull-requests: write
  # Gives the action the necessary permissions for pushing data to the
  # python-coverage-comment-action branch, and for editing existing
  # comments (to avoid publishing multiple comments in the same PR)
  contents: write

jobs:
  build:

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.os }} ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies and source code
      run: |
        python -m pip install --upgrade pip
        pip install -e .[build,docs]

    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        mkdir -p tests/test-reports
        ruff check quirtylog

    - name: Test library
      run: |
        cd tests
        bash battery.sh
      env:
          COVERAGE_FILE: ".coverage${{ matrix.python-version }}"
          # Alternatively you can run coverage with the --parallel flag or add
          # `parallel = True` in the coverage config file.
          # If using pytest-cov, you can also add the `--cov-append` flag
          # directly or through PYTEST_ADD_OPTS.

    - name: Report Coveralls (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        curl -sL https://coveralls.io/coveralls-linux.tar.gz | tar -xz
        ls -la
        coveralls --help

        ./coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
